from requests import Request, Session
from requests.exceptions import ConnectionError, Timeout, TooManyRedirects
import json

url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest'
parameters = {
  'start':'1',
  'limit':'5000',
  'convert':'USD'
}
headers = {
  'Accepts': 'application/json',
  'X-CMC_PRO_API_KEY': 'a1e5cec4-dbcb-4639-a0c1-6be8f32912d4',
}

session = Session()
session.headers.update(headers)

try:
  response = session.get(url, params=parameters)
  data = json.loads(response.text)
  print(data)
except (ConnectionError, Timeout, TooManyRedirects) as e:
  print(e)
import pandas as pd
pd.set_option('display.max_columns', None)
df = pd.json_normalize(data['data'])
df['timestamp'] = pd.to_datetime('now')
def api_runner():
    global df
    url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest'
    parameters = {
      'start':'1',
      'limit':'5000',
      'convert':'USD'
    }
    headers = {
      'Accepts': 'application/json',
      'X-CMC_PRO_API_KEY': 'a1e5cec4-dbcb-4639-a0c1-6be8f32912d4',
    }

    session = Session()
    session.headers.update(headers)

    try:
      response = session.get(url, params=parameters)
      data = json.loads(response.text)
      print(data)
    except (ConnectionError, Timeout, TooManyRedirects) as e:
      print(e)
    df = pd.json_normalize(data['data'])
    df['timestamp'] = pd.to_datetime('now')
    
    if not os.path.isfile(r"C:\Users\malij\Downloads\API.csv"):
        df.to_csv(r"C:\Users\malij\Downloads\API.csv", header = 'column_names')
    else:
        df.to_csv(r"C:\Users\malij\Downloads\API.csv", mode ='a', header = False)
import os
from time import time
from time import sleep

for i in range(333):
    api_runner()
    print('API Runner Completed Successfully')
    sleep(10)
exit()
df70 = pd.read_csv(r"C:\Users\malij\Downloads\API.csv")
pd.set_option('display.float_format', lambda x: '%.5f' % x)
df34 =  df.groupby('name', sort=False)[['quote.USD.percent_change_1h','quote.USD.percent_change_24h','quote.USD.percent_change_7d','quote.USD.percent_change_30d', 'quote.USD.percent_change_60d','quote.USD.percent_change_90d']].mean()
df4 = df34.stack()
df5 = df4.to_frame(name='values')
index=pd.Index(range(29874))
df6 = df5.reset_index()
df7 = df6.rename(columns ={'level_1': 'percent_change'})
df7 = df7.query("name == 'Bitcoin'")
import matplotlib.pyplot as plt
import seaborn as sns
sns.catplot(x='percent_change', y='values', hue='name',data=df7, kind='point')
df10 = df70[['name','quote.USD.price','timestamp']]
df10 = df10.query("name == 'Bitcoin'")
df10
sns.set_theme(style='darkgrid')

sns.lineplot(x='timestamp',y='quote.USD.price', data = df10)
